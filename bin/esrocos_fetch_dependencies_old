#!/usr/bin/env python3
import yaml
import sys
import os
import xml.etree.cElementTree as ET
from subprocess import call 
from os import walk
from shutil import copyfile
import re


ESROCOS_YAML = "esrocos.yml"
ROOT_DIR = os.environ['AUTOPROJ_CURRENT_ROOT']
#SHARED_TYPES_DIR = ROOT_DIR+"/install/types/"

project_name = ""
SRC_DIR = ""

# READ YAML

print("read esrocos.yml...\t\t\t", end=" ")

data = []

try:
  with open(ESROCOS_YAML, 'r') as infile:
    data = yaml.load(infile, yaml.FullLoader)
    component_name = data["COMPONENT_NAME"]
    project_name =data["PROJECT_NAME"]

except IOError:
  print("could not read esrocos.yml, aborting...")
  sys.exit()
except KeyError:
  print("error parsing esrocos.yml, aborting...")
  sys.exit()

print("DONE")

# EXTRACT DEPS

try:
  deps = data['deps']
except KeyError as err:
  print("error in reading yml data, aborting...")
  sys.exit()


package = ET.Element("package")

if deps: 
    for dep in deps:
        print(dep)
        amake_arguments = ["aup", dep]
        call(amake_arguments)
else:
    print("There are no dependencies ")
    exit()

#AMAKE
print("calling amake, installing deps...")



for dep in deps:
    amake_arguments = ["amake", dep]
    call(amake_arguments)
print("DONE")
